upstream webapp {
    # Using environment variables generated by Tye
    server ${WEBAPP_SERVICE_HOST}:${WEBAPP_SERVICE_PORT};
}

upstream appservice {
    # Using environment variables generated by Tye
    server ${APPSERVICE_SERVICE_HOST}:${APPSERVICE_SERVICE_PORT};
}

upstream identity {
    # Using environment variables generated by Tye
    server ${IDENTITY_SERVICE_HOST}:${IDENTITY_SERVICE_PORT};
}

server {
    listen 80 default_server;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name localhost;

    ssl_certificate /etc/nginx/certs/localhost.crt;
    ssl_certificate_key /etc/nginx/certs/localhost.key;

    location / {
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_pass https://webapp/;

        resolver 127.0.0.11;
    }

    location /api/ {
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_pass https://appservice/;

        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;

        resolver 127.0.0.11;

        client_max_body_size 3M;
    }
}

server {
    listen 80;
    server_name identity.local;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name identity.local;

    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    location / {
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_pass https://identity/;

        resolver 127.0.0.11;
    }
}